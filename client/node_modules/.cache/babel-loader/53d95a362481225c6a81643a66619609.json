{"ast":null,"code":"import _slicedToArray from \"/Users/macbook/Desktop/dashboard/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbook/Desktop/dashboard/client/src/components/Dashboard/barChart/BarChart.js\";\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport \"./bar_chart.scss\";\nimport * as d3 from \"d3\";\nimport { scaleLinear } from \"d3-scale\";\n\nconst BarChart = ({\n  companies\n}) => {\n  let _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      sumOfVisitors = _useState2[0],\n      setSumOfVisitors = _useState2[1];\n\n  console.log(sumOfVisitors);\n  const drawChart = useCallback(() => {\n    // const w = 500;\n    // const h = 300;\n    // let data = companies.map(a => a.visitors);\n    // let companiesName = companies.map(a => a.name);\n    // console.log(companiesName);\n    // const myColor = d3\n    //   .scaleOrdinal()\n    //   .domain(data)\n    //   .range([\"#F8C675\", \"rgb(221, 44, 74)\"]);\n    // const svg = d3\n    //   .select(\".bar_chart\")\n    //   .append(\"svg\")\n    //   .attr(\"width\", w)\n    //   .attr(\"height\", h)\n    //   .style(\"margin-left\", 100);\n    // svg\n    //   .selectAll(\"rect\")\n    //   .data(data)\n    //   .enter()\n    //   .append(\"rect\")\n    //   .attr(\"x\", (d, i) => i * 70)\n    //   .attr(\"y\", (d, i) => h - 10 * d)\n    //   .attr(\"width\", 65)\n    //   .attr(\"height\", (d, i) => d * 70)\n    //   .attr(\"fill\", function(d) {\n    //     return myColor(d);\n    //   });\n    // svg\n    //   .selectAll(\"text\")\n    //   .data(data)\n    //   .enter()\n    //   .append(\"text\")\n    //   .text(d => d)\n    //   .attr(\"x\", (d, i) => i * 70)\n    //   .attr(\"y\", (d, i) => h - 10 * d - 3);\n    const letters = [\"A\", \"B\", \"C\", \"D\"];\n    const numbers = [20, 60, 30, 20];\n    const height = 400;\n    const width = 700;\n    const barWidth = width / numbers.length;\n    const margin = {\n      left: 50,\n      top: 10,\n      right: 50,\n      bottom: 30\n    };\n\n    const getRatio = side => margin[side] / width * 100 + \"%\";\n\n    const marginRatio = {\n      left: getRatio(\"left\"),\n      top: getRatio(\"top\"),\n      right: getRatio(\"right\"),\n      bottom: getRatio(\"bottom\")\n    };\n    const svg = d3.select(\"div#chart-container\").append(\"svg\").style(\"padding\", marginRatio.top + \" \" + marginRatio.right + \" \" + marginRatio.bottom + \" \" + marginRatio.left + \" \").attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", \"0 0 \" + (width + margin.left + margin.right) + \" \" + (height + margin.top + margin.bottom));\n    const x = d3.scale.ordinal().domain(letters).rangeRoundBands([0, width], 0.1, 0.1);\n    const xAxis = d3.svg.axis().scale(x).orient(\"bottom\");\n    const y = d3.scale.linear().domain([d3.max(numbers), 0]).range([0, height]);\n    const yAxis = d3.svg.axis().scale(y).orient(\"left\");\n    const bar = svg.selectAll(\"g\").data(numbers).enter().append(\"g\").attr(\"transform\", (_, i) => \"translate(\" + i * barWidth + \", 0)\");\n    svg.append(\"g\").attr(\"class\", \"x axis\").call(xAxis).attr(\"transform\", \"translate(0,\" + height + \")\");\n    svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis);\n    bar.append(\"rect\").attr(\"class\", \"bar\").attr(\"width\", barWidth - 1).attr(\"y\", d => y(d)).attr(\"height\", d => height - y(d));\n  }, []);\n  useEffect(() => {\n    if (companies) {\n      drawChart();\n      setSumOfVisitors(companies.reduce((acc, obj) => {\n        return acc + obj.visitors;\n      }, 0));\n    }\n  }, [companies, drawChart]);\n  return React.createElement(\"div\", {\n    className: \"bar_chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"All current visitors:\", sumOfVisitors));\n};\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/macbook/Desktop/dashboard/client/src/components/Dashboard/barChart/BarChart.js"],"names":["React","useEffect","useCallback","useState","d3","scaleLinear","BarChart","companies","sumOfVisitors","setSumOfVisitors","console","log","drawChart","letters","numbers","height","width","barWidth","length","margin","left","top","right","bottom","getRatio","side","marginRatio","svg","select","append","style","attr","x","scale","ordinal","domain","rangeRoundBands","xAxis","axis","orient","y","linear","max","range","yAxis","bar","selectAll","data","enter","_","i","call","d","reduce","acc","obj","visitors"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\nimport \"./bar_chart.scss\";\nimport * as d3 from \"d3\";\nimport { scaleLinear } from \"d3-scale\";\n\nconst BarChart = ({ companies }) => {\n  let [sumOfVisitors, setSumOfVisitors] = useState(0);\n  console.log(sumOfVisitors);\n  const drawChart = useCallback(() => {\n    // const w = 500;\n    // const h = 300;\n    // let data = companies.map(a => a.visitors);\n    // let companiesName = companies.map(a => a.name);\n    // console.log(companiesName);\n    // const myColor = d3\n    //   .scaleOrdinal()\n    //   .domain(data)\n    //   .range([\"#F8C675\", \"rgb(221, 44, 74)\"]);\n\n    // const svg = d3\n    //   .select(\".bar_chart\")\n    //   .append(\"svg\")\n    //   .attr(\"width\", w)\n    //   .attr(\"height\", h)\n    //   .style(\"margin-left\", 100);\n\n    // svg\n    //   .selectAll(\"rect\")\n    //   .data(data)\n    //   .enter()\n    //   .append(\"rect\")\n    //   .attr(\"x\", (d, i) => i * 70)\n    //   .attr(\"y\", (d, i) => h - 10 * d)\n    //   .attr(\"width\", 65)\n    //   .attr(\"height\", (d, i) => d * 70)\n    //   .attr(\"fill\", function(d) {\n    //     return myColor(d);\n    //   });\n\n    // svg\n    //   .selectAll(\"text\")\n    //   .data(data)\n    //   .enter()\n    //   .append(\"text\")\n    //   .text(d => d)\n    //   .attr(\"x\", (d, i) => i * 70)\n    //   .attr(\"y\", (d, i) => h - 10 * d - 3);\n    const letters = [\"A\", \"B\", \"C\", \"D\"];\n    const numbers = [20, 60, 30, 20];\n    const height = 400;\n    const width = 700;\n    const barWidth = width / numbers.length;\n    const margin = { left: 50, top: 10, right: 50, bottom: 30 };\n\n    const getRatio = side => (margin[side] / width) * 100 + \"%\";\n\n    const marginRatio = {\n      left: getRatio(\"left\"),\n      top: getRatio(\"top\"),\n      right: getRatio(\"right\"),\n      bottom: getRatio(\"bottom\")\n    };\n\n    const svg = d3\n      .select(\"div#chart-container\")\n      .append(\"svg\")\n      .style(\n        \"padding\",\n        marginRatio.top +\n          \" \" +\n          marginRatio.right +\n          \" \" +\n          marginRatio.bottom +\n          \" \" +\n          marginRatio.left +\n          \" \"\n      )\n      .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n      .attr(\n        \"viewBox\",\n        \"0 0 \" +\n          (width + margin.left + margin.right) +\n          \" \" +\n          (height + margin.top + margin.bottom)\n      );\n\n    const x = d3.scale\n      .ordinal()\n      .domain(letters)\n      .rangeRoundBands([0, width], 0.1, 0.1);\n\n    const xAxis = d3.svg\n      .axis()\n      .scale(x)\n      .orient(\"bottom\");\n\n    const y = d3.scale\n      .linear()\n      .domain([d3.max(numbers), 0])\n      .range([0, height]);\n\n    const yAxis = d3.svg\n      .axis()\n      .scale(y)\n      .orient(\"left\");\n\n    const bar = svg\n      .selectAll(\"g\")\n      .data(numbers)\n      .enter()\n      .append(\"g\")\n      .attr(\"transform\", (_, i) => \"translate(\" + i * barWidth + \", 0)\");\n\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis)\n      .attr(\"transform\", \"translate(0,\" + height + \")\");\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n    bar\n      .append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"width\", barWidth - 1)\n      .attr(\"y\", d => y(d))\n      .attr(\"height\", d => height - y(d));\n  }, []);\n\n  useEffect(() => {\n    if (companies) {\n      drawChart();\n      setSumOfVisitors(\n        companies.reduce((acc, obj) => {\n          return acc + obj.visitors;\n        }, 0)\n      );\n    }\n  }, [companies, drawChart]);\n  return (\n    <div className=\"bar_chart\">\n      <span>All current visitors:{sumOfVisitors}</span>\n    </div>\n  );\n};\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}