{"ast":null,"code":"import _slicedToArray from \"/Users/macbook/Desktop/dashboard/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbook/Desktop/dashboard/client/src/components/Dashboard/dashboard.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport DashboardCardsItem from \"./DashbordCards/dashboardCardsItem\";\nimport { DashboardContext } from \"../../context/dashboardContext\";\nimport { useFetch } from \"../../useFetch\";\nimport BarChart from \"./barChart/BarChart\";\nimport uniqid from \"uniqid\";\nimport water from \"../../assets/images/water.svg\";\nimport thermometer from \"../../assets/images/thermometer.svg\";\nimport sadPlant from \"../../assets/images/sad_plant.png\";\nimport happyPlant from \"../../assets/images/happy_plant.png\";\nimport \"./dashboard.scss\";\n\nconst Dashboard = () => {\n  useFetch();\n  const context = useContext(DashboardContext);\n\n  const _context = _slicedToArray(context, 1),\n        state = _context[0];\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        watherPlant = _useState2[0],\n        setWatherPlant = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        moreDrinks = _useState4[0],\n        setMoreDrinks = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        temperature = _useState6[0],\n        setTemperature = _useState6[1];\n\n  const images = [thermometer, water, watherPlant ? sadPlant : happyPlant];\n  const buttonText = [\"+-\", moreDrinks ? \"Added!\" : \"Add more!\", watherPlant ? \"Wather!\" : \"Wathered:)\"];\n  useEffect(() => {}, []);\n  console.log(state);\n  return React.createElement(\"div\", {\n    className: \"dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dashboard_cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, state.officeInfo && state.officeInfo.map((card, index) => {\n    card.img = images[index];\n    card.btnText = buttonText[index];\n    return React.createElement(DashboardCardsItem, {\n      temperature: temperature,\n      setTemperature: setTemperature,\n      btnText: buttonText[index],\n      data: card,\n      moreDrinks: moreDrinks,\n      setMoreDrinks: setMoreDrinks,\n      id: index,\n      setWatherPlant: setWatherPlant,\n      key: uniqid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: \"dashboard_graf\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(BarChart, {\n    companies: state.companies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/macbook/Desktop/dashboard/client/src/components/Dashboard/dashboard.js"],"names":["React","useContext","useEffect","useState","DashboardCardsItem","DashboardContext","useFetch","BarChart","uniqid","sadPlant","happyPlant","Dashboard","context","state","watherPlant","setWatherPlant","moreDrinks","setMoreDrinks","temperature","setTemperature","images","thermometer","water","buttonText","console","log","officeInfo","map","card","index","img","btnText","companies"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAO,kBAAP;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtBL,EAAAA,QAAQ;AAER,QAAMM,OAAO,GAAGX,UAAU,CAACI,gBAAD,CAA1B;;AAHsB,kCAINO,OAJM;AAAA,QAIfC,KAJe;;AAAA,oBAKgBV,QAAQ,CAAC,IAAD,CALxB;AAAA;AAAA,QAKfW,WALe;AAAA,QAKFC,cALE;;AAAA,qBAMcZ,QAAQ,CAAC,CAAD,CANtB;AAAA;AAAA,QAMfa,UANe;AAAA,QAMHC,aANG;;AAAA,qBAOgBd,QAAQ,CAAC,CAAD,CAPxB;AAAA;AAAA,QAOfe,WAPe;AAAA,QAOFC,cAPE;;AAQtB,QAAMC,MAAM,GAAG,CAACC,WAAD,EAAcC,KAAd,EAAqBR,WAAW,GAAGL,QAAH,GAAcC,UAA9C,CAAf;AACA,QAAMa,UAAU,GAAG,CACjB,IADiB,EAEjBP,UAAU,GAAG,QAAH,GAAc,WAFP,EAGjBF,WAAW,GAAG,SAAH,GAAe,YAHT,CAAnB;AAKAZ,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AACAsB,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACa,UAAN,IACCb,KAAK,CAACa,UAAN,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpCD,IAAAA,IAAI,CAACE,GAAL,GAAWV,MAAM,CAACS,KAAD,CAAjB;AACAD,IAAAA,IAAI,CAACG,OAAL,GAAeR,UAAU,CAACM,KAAD,CAAzB;AACA,WACE,oBAAC,kBAAD;AACE,MAAA,WAAW,EAAEX,WADf;AAEE,MAAA,cAAc,EAAEC,cAFlB;AAGE,MAAA,OAAO,EAAEI,UAAU,CAACM,KAAD,CAHrB;AAIE,MAAA,IAAI,EAAED,IAJR;AAKE,MAAA,UAAU,EAAEZ,UALd;AAME,MAAA,aAAa,EAAEC,aANjB;AAOE,MAAA,EAAE,EAAEY,KAPN;AAQE,MAAA,cAAc,EAAEd,cARlB;AASE,MAAA,GAAG,EAAEP,MAAM,EATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD,GAhBD,CAFJ,CADF,EAqBE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEK,KAAK,CAACmB,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArBF,CADF;AA2BD,CA3CD;;AA6CA,eAAerB,SAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport DashboardCardsItem from \"./DashbordCards/dashboardCardsItem\";\nimport { DashboardContext } from \"../../context/dashboardContext\";\nimport { useFetch } from \"../../useFetch\";\nimport BarChart from \"./barChart/BarChart\";\nimport uniqid from \"uniqid\";\nimport water from \"../../assets/images/water.svg\";\nimport thermometer from \"../../assets/images/thermometer.svg\";\nimport sadPlant from \"../../assets/images/sad_plant.png\";\nimport happyPlant from \"../../assets/images/happy_plant.png\";\nimport \"./dashboard.scss\";\n\nconst Dashboard = () => {\n  useFetch();\n\n  const context = useContext(DashboardContext);\n  const [state] = context;\n  const [watherPlant, setWatherPlant] = useState(true);\n  const [moreDrinks, setMoreDrinks] = useState(0);\n  const [temperature, setTemperature] = useState(0);\n  const images = [thermometer, water, watherPlant ? sadPlant : happyPlant];\n  const buttonText = [\n    \"+-\",\n    moreDrinks ? \"Added!\" : \"Add more!\",\n    watherPlant ? \"Wather!\" : \"Wathered:)\"\n  ];\n  useEffect(() => {}, []);\n  console.log(state);\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard_cards\">\n        {state.officeInfo &&\n          state.officeInfo.map((card, index) => {\n            card.img = images[index];\n            card.btnText = buttonText[index];\n            return (\n              <DashboardCardsItem\n                temperature={temperature}\n                setTemperature={setTemperature}\n                btnText={buttonText[index]}\n                data={card}\n                moreDrinks={moreDrinks}\n                setMoreDrinks={setMoreDrinks}\n                id={index}\n                setWatherPlant={setWatherPlant}\n                key={uniqid()}\n              />\n            );\n          })}\n      </div>\n      <div className=\"dashboard_graf\">\n        <BarChart companies={state.companies} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}