{"ast":null,"code":"import _defineProperty from \"/Users/macbook/Desktop/dashboard/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { START_FETCH } from \"./constants\";\nconst initialState = {\n  startFetching: false,\n  status: \"\",\n  response: null\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case START_FETCH:\n      return _objectSpread({}, state, {\n        staus: \"pending\",\n        response: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/macbook/Desktop/dashboard/client/src/js/rootReducer.js"],"names":["START_FETCH","initialState","startFetching","status","response","rootReducer","state","action","type","staus","payload"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;;AAKA,SAASC,WAAT,CAAqBC,KAAK,GAAGL,YAA7B,EAA2CM,MAA3C,EAAmD;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAL;AACE,+BACKM,KADL;AAEEG,QAAAA,KAAK,EAAE,SAFT;AAGEL,QAAAA,QAAQ,EAAEG,MAAM,CAACG;AAHnB;;AAKF;AACE,aAAOJ,KAAP;AARJ;AAUD;;AACD,eAAeD,WAAf","sourcesContent":["import { START_FETCH } from \"./constants\";\n\nconst initialState = {\n  startFetching: false,\n  status: \"\",\n  response: null\n};\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case START_FETCH:\n      return {\n        ...state,\n        staus: \"pending\",\n        response: action.payload\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}