{"ast":null,"code":"import _slicedToArray from \"/Users/macbook/Desktop/dashboard/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { DashboardContext } from \"./context/dashboardContext\";\nimport { START_FETCH, FETCH_ERROR, FETCH_SUCCESS } from \"./context/dashboardReducer\";\nimport axios from \"axios\";\n\nconst useFetch = () => {\n  const context = useContext(DashboardContext);\n\n  const _context = _slicedToArray(context, 2),\n        dispatch = _context[1];\n\n  useEffect(() => {\n    dispatch({\n      type: START_FETCH\n    });\n    axios.get(\"http://localhost:5000/dashboardInfo\").then(response => {\n      dispatch({\n        type: FETCH_SUCCESS,\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: FETCH_ERROR,\n        payload: error\n      });\n    });\n  }, [dispatch]);\n};\n\nexport { useFetch };","map":{"version":3,"sources":["/Users/macbook/Desktop/dashboard/client/src/useFetch.js"],"names":["useContext","useEffect","useState","DashboardContext","START_FETCH","FETCH_ERROR","FETCH_SUCCESS","axios","useFetch","context","dispatch","type","get","then","response","payload","data","catch","error"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,aAHF,QAIO,4BAJP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,OAAO,GAAGT,UAAU,CAACG,gBAAD,CAA1B;;AADqB,kCAEAM,OAFA;AAAA,QAEZC,QAFY;;AAIrBT,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACAG,IAAAA,KAAK,CACFK,GADH,CACO,qCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL,aAAR;AAAuBS,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAAzC,OAAD,CAAR;AACD,KAJH,EAKGC,KALH,CAKSC,KAAK,IAAI;AACdR,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEN,WAAR;AAAqBU,QAAAA,OAAO,EAAEG;AAA9B,OAAD,CAAR;AACD,KAPH;AAQD,GAVQ,EAUN,CAACR,QAAD,CAVM,CAAT;AAWD,CAfD;;AAgBA,SAASF,QAAT","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { DashboardContext } from \"./context/dashboardContext\";\nimport {\n  START_FETCH,\n  FETCH_ERROR,\n  FETCH_SUCCESS\n} from \"./context/dashboardReducer\";\n\nimport axios from \"axios\";\n\nconst useFetch = () => {\n  const context = useContext(DashboardContext);\n  const [, dispatch] = context;\n\n  useEffect(() => {\n    dispatch({ type: START_FETCH });\n    axios\n      .get(\"http://localhost:5000/dashboardInfo\")\n      .then(response => {\n        dispatch({ type: FETCH_SUCCESS, payload: response.data });\n      })\n      .catch(error => {\n        dispatch({ type: FETCH_ERROR, payload: error });\n      });\n  }, [dispatch]);\n};\nexport { useFetch };\n"]},"metadata":{},"sourceType":"module"}